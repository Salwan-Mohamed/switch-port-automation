---
- name: Resolve Switch Based on Room Number and Convert Wall Point
  hosts: localhost
  gather_facts: no
  vars_files:
    - switch_mapping.yml
    - interface_descriptions.yml
    - vlan_mapping.yml
    - wall_point_mapping.yml

  tasks:
    - name: Find Switch for Given Room
      set_fact:
        switch_name: "{{ item.key }}"
      loop: "{{ switch_mapping | dict2items }}"
      when: room in item.value

    - name: Fail if No Matching Switch is Found
      fail:
        msg: "No switch found for room {{ room }}. Check switch_mapping.yml"
      when: switch_name is not defined

    - name: Convert Wall Point to Switch Port
      set_fact:
        port_number: "{{ wall_point_mapping[wall_point] }}"
      when: wall_point is defined

    - name: Fail if Wall Point Not Found
      fail:
        msg: "Wall point {{ wall_point }} not found in mapping. Check wall_point_mapping.yml"
      when: port_number is not defined

    - name: Validate Device Type
      fail:
        msg: "Invalid device type '{{ device_type }}'. Valid types are: {{ vlan_mapping.keys() | list }}"
      when: device_type is defined and device_type not in vlan_mapping

    - name: Get Interface Description
      set_fact:
        interface_description: "{{ interface_descriptions[room] }}"

    - name: Add Resolved Switch to Inventory
      add_host:
        name: "{{ switch_name }}"
        groups: dynamic_switches
        ansible_port_number: "{{ port_number }}"
        interface_description: "{{ interface_description }}"
        ansible_device_type: "{{ device_type }}"
        ansible_second_device_type: "{{ second_device_type | default('none') }}"

- name: Configure Cisco Switch Port Based on Device Type and Configuration Cases
  hosts: dynamic_switches
  gather_facts: no
  vars_files:
    - vlan_mapping.yml

  tasks:
    - name: Reset the interface to default configuration
      cisco.ios.ios_config:
        lines:
          - "default interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Configure interface for phone only (Case 1)
      when: hostvars[inventory_hostname]['ansible_device_type'] == "phone"
      cisco.ios.ios_config:
        lines:
          - "description {{ hostvars[inventory_hostname]['interface_description'] }}"
          - "switchport mode access"
          - "switchport voice vlan {{ vlan_mapping.phone }}"
          - "duplex full"
          - "switchport port-security mac-address sticky"
          - "switchport port-security maximum 1"
          - "switchport port-security"
          - "no shutdown"
        parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Configure interface for non-phone devices (Case 2)
      when:
        - hostvars[inventory_hostname]['ansible_device_type'] != "phone"
        - hostvars[inventory_hostname]['ansible_device_type'] != "none"
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "none"
      cisco.ios.ios_config:
        lines:
          - "description {{ hostvars[inventory_hostname]['interface_description'] }}"
          - "switchport mode access"
          - "switchport access vlan {{ vlan_mapping[hostvars[inventory_hostname]['ansible_device_type']] }}"
          - "duplex full"
          - "switchport port-security mac-address sticky"
          - "switchport port-security maximum 1"
          - "switchport port-security"
          - "no shutdown"
        parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Configure interface for device with phone (Case 3)
      when:
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "phone"
      cisco.ios.ios_config:
        lines:
          - "description {{ hostvars[inventory_hostname]['interface_description'] }}"
          - "switchport mode access"
          - "switchport access vlan {{ vlan_mapping[hostvars[inventory_hostname]['ansible_device_type']] }}"
          - "switchport voice vlan {{ vlan_mapping.phone }}"
          - "duplex full"
          - "switchport port-security mac-address sticky"
          - "switchport port-security maximum 2"
          - "switchport port-security"
          - "no shutdown"
        parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Configure interface for none device (Case 4)
      when: 
        - hostvars[inventory_hostname]['ansible_device_type'] == "none"
        - hostvars[inventory_hostname]['ansible_second_device_type'] == "none"
      cisco.ios.ios_config:
        lines:
          - "description {{ hostvars[inventory_hostname]['interface_description'] }}"
          - "switchport mode access"
          - "duplex full"
          - "switchport port-security mac-address sticky"
          - "switchport port-security maximum 1"
          - "switchport port-security"
          - "shutdown"
        parents: "interface {{ hostvars[inventory_hostname]['ansible_port_number'] }}"

    - name: Save configuration
      cisco.ios.ios_config:
        save_when: always
